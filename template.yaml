# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-boilerplate-api

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    TracingEnabled: True

Resources:
  S3Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "s3-drone-${Environment}-api"
      StageName: !Ref Environment
      DefinitionBody: {
        "swagger": "2.0",
        "info": {
          "version": "1.0",
          "title": "API for interacting with S3."
        },
        "paths": {
          "/{bucket}/{item}": {
            "get": {
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "name": "item",
                  "in": "path",
                  "required": true,
                  "type": "string"
                },
                {
                  "name": "bucket",
                  "in": "path",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {
                "200": {
                  "description": "200 response",
                  "headers": {
                    "Content-Type": {
                      "type": "string"
                    }
                  }
                },
                "400": {
                  "description": "400 response"
                },
                "500": {
                  "description": "500 response"
                }
              },
              "x-amazon-apigateway-integration": {
                "credentials": "arn:aws:iam::${AWS::AccountId}:role/${AWS::Region}APIS3ReadOnlyRole",
                "responses": {
                  "4\\d{2}": {
                    "statusCode": "400"
                  },
                  "default": {
                    "statusCode": "200",
                    "responseParameters": {
                      "method.response.header.Content-Type": "integration.response.header.Content-Type"
                    }
                  },
                  "5\\d{2}": {
                    "statusCode": "500"
                  }
                },
                "requestParameters": {
                  "integration.request.path.object": "method.request.path.item",
                  "integration.request.path.bucket": "method.request.path.bucket"
                },
                "uri": "arn:aws:apigateway:${AWS::Region}:s3:path/{bucket}/{object}",
                "passthroughBehavior": "when_no_match",
                "httpMethod": "GET",
                "type": "aws"
              }
            }
          }
        }
      }

  APIS3Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      RoleName:
        Fn::Join:
          - ''
          - - Ref: AWS::Region
            - "APIS3ReadOnlyRole"

  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"

Outputs:
  APIEndpoint:
    Description: "API EndPoint for interacting with S3"
    Value: !Sub "https://${S3Api}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
  APIS3Role:
    Description: "Test role"
    Value: !Sub "${APIS3Role}"
